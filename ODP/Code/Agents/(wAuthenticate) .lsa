<?xml version='1.0' encoding='utf-8'?>
<agent name='(wAuthenticate) ' alias=' wAuthenticate' xmlns='http://www.lotus.com/dxl'
 version='9.0' maintenanceversion='1.5' replicaid='C1257E4300352F3F' hide='v3'
 runaswebuser='true' publicaccess='false' designerversion='8.5.2'>
<noteinfo noteid='252' unid='D844EA64FBDA0A6AC1256BCE002BDA60' sequence='5108'>
<created><datetime dst='true'>20020604T095859,52+02</datetime></created>
<modified><datetime dst='true'>20150512T114056,48+02</datetime></modified>
<revised><datetime dst='true'>20130909T095407,56-04</datetime></revised>
<lastaccessed><datetime dst='true'>20150512T114056,48+02</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20150512T114056,48+02</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></updatedby>
<revisions><datetime dst='true'>20100805T153511,72-04</datetime></revisions>
<wassignedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></wassignedby>
<designchange><datetime dst='true'>20130909T095358,77-04</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>%REM

  this agent checks if the user is allowed to do a certain action
  and returns either an error message or the requested item

%END REM

Option Public
Option Base 0
Option Compare Nocase
Option Declare

Use "WebLSUtils"

</lotusscript></code><code event='declarations'><lotusscript>Const EXT_DIR_FORM_LABEL	= "Extended Directory Catalog"

Const ERR_NO_DOC_EDIT	= "You are not authorized to edit this document"
Const ERR_NO_DOC_NEW	= "You are not authorized to add %s1 documents to this database"

Class cAuthenticate
	
	Public	m_ses		As NotesSession
	Public	m_ndb		As NotesDatabase
	Public	m_docCtx		As NotesDocument
	Public	m_sQueryString	As String
	Public	m_sErrMsg		As String
	
	Sub new
		
		On Error Goto ERROR_HANDLER
		
		'set common vars
		Set m_ses		= New NotesSession
		Set m_ndb		= m_ses.CurrentDatabase
		Set m_docCtx 	= m_ses.DocumentContext
		
		m_sQueryString = m_docCtx.Query_String_Decoded(0)
		
		Select Case UtilGetQueryParameter(m_sQueryString, "&amp;ReqId=")
		Case "EditDocument":	Call EditDocument
		Case "NewDocument":		Call NewDocument
		End Select
		
		If m_sErrMsg &lt;&gt; "" Then
			WebReturnMsg(m_sErrMsg)
		End If
		
		Exit Sub
		
ERROR_HANDLER:
		
		WebReturnMsg(Error)
		
		Msgbox Getthreadinfo(LSI_THREAD_PROC) &amp; " (" &amp; Cstr(Erl) &amp; ") " &amp; Error
		
		Exit Sub
	End Sub
	
	
	'---------------
	Sub NewDocument
	'---------------
		On Error Goto ERROR_HANDLER
		
		' Parameters from caller
		'
		'	&amp;Role=Role to be checked (blank to ignore role check)
		'	&amp;Form=Name/Alias of form to be composed
		'	&amp;OldForm=Notes 4.x and older version of form name (optional)
		'	&amp;Passthrough=Parameter(s) which are passed to the WebReturnForm function
		
		Dim hACL			As NotesACL
		Dim hACLEntry		As NotesACLEntry
		Dim hName			As NotesName
		
		Dim sForm			As String
		Dim sFormInMsg		As String
		Dim sOldForm		As String
		Dim sPassthrough	As String
		Dim sRole			As String
		Dim sVersion		As String
		Dim sLocation		As String
		Dim vRoles		As Variant
		Dim vResult		As Variant
		Dim bCanDo		As Boolean
		
		sRole		= UtilGetQueryParameter(m_sQueryString, "&amp;Role=")
		sForm		= UtilGetQueryParameter(m_sQueryString, "&amp;Form=")
		sOldForm		= UtilGetQueryParameter(m_sQueryString, "&amp;OldForm=")
		sPassthrough	= UtilGetQueryParameter(m_sQueryString, "&amp;Passthrough=")
		
		bCanDo = False
		
		Set hName	= New NotesName(UtilGetRemoteUserName())
		vRoles = m_ndb.QueryAccessRoles(hName.Abbreviated)
		
		If Not Isnull(Arraygetindex(vRoles, sRole)) Then
			
			'Check for both the common and fully qualified user name in the ACL
			Set hACL	= m_ndb.ACL
			
			'get acl entry with users abbreviated name
			Set hACLEntry = hACL.GetEntry(hName.Abbreviated)
			If hACLEntry Is Nothing Then
				'get acl entry with users common name
				Set hACLEntry = hACL.GetEntry(hName.Common)
			End If
			
			'check with username in ACL
			If Not hACLEntry Is Nothing Then
				If hACLEntry.CanCreateDocuments Then
					bCanDo = True
				End If
			End If	
			
			'if user is in the ACL not by name test with the groups the user belongs to
			If bCanDo = False And hACLEntry Is Nothing Then
				
				'get users groups &amp; roles
				vResult = Evaluate(|@UserNamesList|)
				
				'loop: all user group &amp; roles - check if one of them is in the ACL
				Forall sName In vResult
					Set hACLEntry = hACL.GetEntry(sName)
					If Not hACLEntry Is Nothing Then
						If hACLEntry.CanCreateDocuments Then
							bCanDo = True
						End If
					End If	
					If bCanDo Then Exit Forall
				End Forall		
			End If
		End If
		
		If bCanDo = False Then
			'change form name when wording for a form was changed
			sFormInMsg = sForm
			If sForm = "Aggregation Configuration" Then
				sFormInMsg = EXT_DIR_FORM_LABEL
			End If
			m_sErrMsg = UtilSprintf(ERR_NO_DOC_NEW, sFormInMsg, "")
		Else
			' User has the appropriate rights
			
			' Display the form - if an old version of the form name was supplied, use it if the release of Notes is &lt; 5.x
			If sOldForm &lt;&gt; "" Then
				sVersion = m_ses.NotesVersion
				If Left$(sVersion,14) = "Notes Release " Then
					If Mid$(sVersion, 15, 1) &lt; "5" Then
						sForm = sOldForm
					End If
				End If
			End If
			
			WebReturnUrl(UtilWebDbName(m_ndb) &amp; UtilEscapePath(sForm) &amp; |/?OpenForm| &amp; UtilUnescape(sPassthrough))
		End If
		
		Exit Sub
		
ERROR_HANDLER:
		Error Err, "&lt;e&gt;" &amp; Getthreadinfo(LSI_THREAD_PROC) &amp; " (" &amp; Cstr(Erl) &amp; ") " &amp; Error
		Exit Sub
	End Sub
	
	
	'---------------
	Sub EditDocument
	'---------------
		On Error Goto ERROR_HANDLER
		
		Dim nmUser		As NotesName
		Dim sRole			As String
		Dim sUNID			As String
		Dim sView			As String
		Dim sPassthrough	As String
		Dim sLocation		As String
		Dim vRoles		As Variant
		
		sRole		= UtilGetQueryParameter(m_sQueryString, "&amp;Role=")
		sView		= UtilGetQueryParameter(m_sQueryString, "&amp;View=")
		sUNID		= UtilGetQueryParameter(m_sQueryString, "&amp;UNID=")
		sPassthrough	= UtilGetQueryParameter(m_sQueryString, "&amp;Passthrough=")
		
		Set nmUser	= New NotesName(UtilGetRemoteUserName())
		vRoles = m_ndb.QueryAccessRoles(nmUser.Abbreviated)
		
		If Not Isnull(Arraygetindex(vRoles, sRole)) Then
			If m_ndb.QueryAccess(nmUser.Abbreviated) &gt;= 3 Then
				sLocation	= UtilWebDbName(m_ndb) &amp; UtilEscapePath(sView) &amp; "/" + sUNID &amp; |?EditDocument| &amp; UtilUnescape(sPassthrough)
			End If
		End If
		
		'This enables those without the GroupModifier role to be able to still edit if they have the appropriate access
		sLocation	= UtilWebDbName(m_ndb) &amp; UtilEscapePath(sView) &amp; "/" + sUNID &amp; |?EditDocument| &amp; UtilUnescape(sPassthrough)
		
		If sLocation = "" Then
			m_sErrMsg = ERR_NO_DOC_EDIT
		Else
			WebReturnUrl(sLocation)
		End If
		
		Exit Sub
		
ERROR_HANDLER:
		Error Err, "&lt;e&gt;" &amp; Getthreadinfo(LSI_THREAD_PROC) &amp; " (" &amp; Cstr(Erl) &amp; ") " &amp; Error
		Exit Sub
	End Sub
	
	
	'--------------
	Sub WebReturnUrl(sLocation As String)
	'--------------
		
		'check if we are in the edit framework
		If Instr(m_sQueryString, "EditFramework") &gt; 0 Then
			Print _
			|content-type:text/html
			&lt;html&gt;
				&lt;frameset	rows="*,0" frameborder=yes border=1 framespacing=0 &gt;
					&lt;frame	name="frDocument" 		src="| &amp; sLocation &amp; |"	frameborder=1	border=0	marginwidth=0 marginheight=0 noresize 	scrolling=auto&gt;
					&lt;frame	name="frEFSrvResponse" 	src="about:blank" 		frameborder=0	border=0	marginwidth=0 marginheight=0 noresize 	scrolling=auto&gt;
				&lt;/frameset&gt;
			&lt;/html&gt;
			|
		Else
			Print _
			|content-type:text/html
			&lt;html&gt;
				&lt;body onLoad="window.location = '| + sLocation &amp; |'"&gt;&lt;/body&gt;
			&lt;/html&gt;
			|
		End If
		
	End Sub
	
	
	'--------------
	Sub WebReturnMsg(sMsg As String)
	'--------------
		Print _
		|&lt;Meta http-equiv="content-Type" content="text/html"&gt;
		&lt;html&gt;
		&lt;script&gt;
			alert('| &amp; UtilEscapeJS(sMsg) &amp; |')
			history.back()
		&lt;/script&gt;
		&lt;body&gt;&lt;/body&gt;
		&lt;/html&gt;
		|
	End Sub
	
End Class
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	
	Dim o As New cAuthenticate
	
End Sub
</lotusscript></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime dst='true'>20100805T153507,06-04</datetime></agentmodified></rundata>
<item name='$POID'><datetime dst='true'>20130909T095407,56-04</datetime></item></agent>

