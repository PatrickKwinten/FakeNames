<?xml version='1.0' encoding='utf-8'?>
<agent name='(Import Holidays)' xmlns='http://www.lotus.com/dxl' version='9.0'
 maintenanceversion='1.5' replicaid='C1257E4300352F3F' hide='v3' publicaccess='false'
 designerversion='6' language='en'>
<noteinfo noteid='27e' unid='C7C7D44652E15992852566090057581B' sequence='5019'>
<created><datetime dst='true'>19980519T115401,87-04</datetime></created>
<modified><datetime dst='true'>20150512T114056,58+02</datetime></modified>
<revised><datetime dst='true'>20130909T095404,86-04</datetime></revised>
<lastaccessed><datetime dst='true'>20150512T114056,58+02</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20150512T114056,58+02</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></updatedby>
<revisions><datetime dst='true'>20090514T140103,69-04</datetime><datetime
>20100304T143916,40-05</datetime></revisions>
<wassignedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></wassignedby>
<designchange><datetime dst='true'>20130909T095355,66-04</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>Option Explicit
</lotusscript></code><code event='declarations'><lotusscript>'Import Holidays: 

'//String Table// 
'BEGIN TRANSLATE
Const strProgramWindowTitle$ = "Calendar Import"
Const strErr_NoOpenMasterDB$ = "Could not open database 'Domino Directory' template"
Const strErr_VersionWarning$ = "This feature requires a Domino version 5.0 or greater Domino Directory."
Const strErr_NoViewInNAB$ = "Required view not found in Domino Directory."
Const strErr_NoMailServerSpecified$ = "No mail server has been specified for current location."
Const strErr_NoDocuments$ = "No documents have been found to import."
'END TRANSLATE

'//paramter name consts  DNT
Const MB_OK=0
Const MB_YESNO = 4
Const MB_ICONQUESTION = 32
Const IDYES = 6
Const MB_ICONEXCLAMATION = 48
Const strdBMasterHoliday$ = "pubnames.ntf"
Const strHolidayView$ = "($Holidays)"
Const strPublicNABHolidayView$ = "($Holidays)"

Class cBaseServerImportHolidays
'//dim flags//   
	Private m_nMB_OK As Integer
	Private m_nProceed As Integer
	Private m_nSuccess As Integer
	
'//dim Objects//
	Public m_dbCurrentDatabase As notesdatabase
	Public m_dbMasterHoliday As notesdatabase
	Private m_session As notessession
	Private m_uiws As NotesUIWorkspace
	Private m_viewPublicNABHoliday As notesview
	Private m_viewHolidayGroup As notesview
	Private m_notePublicHolidayDoc As notesdocument
	Private m_noteHolidayDoc As notesdocument
	
'//dim locals//
	Public m_strMailServerName As String
	Private m_strAPPTUNIDKey(1) As String
	Private m_strServerName As String
	Private m_strReturnValue As Variant
	Private m_vHolidayCategory As Variant
	
'//Sub &amp; Funtion declaration//
Declare Public Sub New
Declare Public Function CopyToDB()
Declare Private Function fCopyToDB()
Declare Private Function fGetMailServerName() As String
Declare Private Function YesNoPrompt(sPrompt As String, sTitle As String) As Integer
Declare Private Function DisplayWarn(sError As String, nPrompt As Integer, sTitle As String) As Integer
	
'//Constructor//
	Sub new()
		Set Me.m_session = New notessession
		Set Me.m_uiws = New notesuiworkspace   
		
		Set Me.m_dbCurrentDatabase = Me.m_session.currentdatabase
		Me.m_strServerName$ = fGetMailServerName()
		If Me.m_dbMasterHoliday Is Nothing Then
			Set Me.m_dbMasterHoliday = New notesdatabase(Me.m_strServerName$ , strdbMasterHoliday$)
		End If
		
		If Not Me.m_dbMasterHoliday.IsOpen Then
			Call DisplayWarn(strErr_NoOpenMasterDB$ &amp; Chr(13) &amp;_
			Me.m_strServerName$ &amp;"!!" &amp; strdbMasterHoliday$, MB_OK , strProgramWindowTitle$)
			End
		Else
			Set Me.m_viewHolidayGroup = Me.m_dbMasterHoliday.getview(strHolidayView$)
			If Me.m_viewHolidayGroup Is Nothing Then
				Call DisplayWarn(strErr_NoViewInNAB$ &amp; Chr(13) &amp; strErr_VersionWarning$ &amp; Chr(13) &amp;_
				m_strServerName$ &amp;"!!"  &amp; strdbMasterHoliday$, MB_OK , strProgramWindowTitle$)
				End
			End If
			Set Me.m_viewPublicNABHoliday = Me.m_dbCurrentDatabase.getview(strPublicNABHolidayView$) 
		End If           
	End Sub
	
	Function CopyToDB()
		Me.m_nSuccess = fCopyToDB()
	End Function
	
	Function fCopyToDB() As Integer
		Set Me.m_noteHolidayDoc = Me.m_viewHolidayGroup.getfirstdocument
		If Me.m_noteHolidayDoc Is Nothing Then
			Call DisplayWarn(strErr_NoDocuments$ , MB_OK , strProgramWindowTitle$)		
			Exit Function
		Else
CheckDupe:
			Me.m_vHolidayCategory = Me.m_noteHolidayDoc.ColumnValues(0)
			If Isarray(Me.m_vHolidayCategory) Then
				Me.m_strAPPTUNIDKey(0) = Me.m_vHolidayCategory(0)				
			Else
				Me.m_strAPPTUNIDKey(0) = Me.m_vHolidayCategory
			End If
			Me.m_strAPPTUNIDKey(1) = Me.m_noteHolidayDoc.ColumnValues(1)               
			Call Me.m_viewPublicNABHoliday.refresh
			Set Me.m_notePublicHolidayDoc = Me.m_viewPublicNABHoliday.getdocumentbykey(Me.m_strAPPTUNIDKey,True)
			If Me.m_notePublicHolidayDoc Is Nothing Then
				On Error Goto Trap
				Dim tmpDoc As NotesDocument
				Set tmpDoc = Me.m_dbCurrentDatabase.GetDocumentByUNID( Me.m_noteHolidayDoc.ApptUNID(0) )
				If tmpDoc Is Nothing Then
					Set Me.m_notePublicHolidayDoc = New NotesDocument(Me.m_dbCurrentDatabase)
					Call Me.m_noteHolidayDoc.CopyAllItems(Me.m_notePublicHolidayDoc)
					Me.m_notePublicHolidayDoc.UniversalID = Me.m_noteHolidayDoc.ApptUNID(0)  
					Call Me.m_notePublicHolidayDoc.save(True,True,False)
				End If
				Delete tmpDoc
			Else
				Call Me.m_noteHolidayDoc.CopyAllItems(Me.m_notePublicHolidayDoc, True)
				Call Me.m_notePublicHolidayDoc.save(True,True,False)
			End If
			Set Me.m_noteHolidayDoc = Me.m_viewHolidayGroup.getnextdocument(Me.m_noteHolidayDoc)
			If Me.m_noteHolidayDoc Is Nothing Then
				Exit Function
			End If
			Goto CheckDupe
		End If
		
Trap:
		Resume Next
		
	End Function
	
	Function fGetMailServerName() As String
		Me.m_strReturnValue = Evaluate(|@LocationGetInfo([HomeServer])|)
		If Me.m_strReturnValue(0) = "" Then
			Call DisplayWarn(strErr_NoMailServerSpecified$ , MB_OK , strProgramWindowTitle$)
			End
		Else
			fGetMailServerName = Me.m_strReturnValue(0) 
		End If
	End Function
	
	Function YesNoPrompt(sPrompt As String, sTitle As String) As Integer
		Dim nResult As Integer         
		nResult = Messagebox(sPrompt, MB_YESNO+MB_ICONQUESTION, sTitle)
		YesNoPrompt = (nResult = IDYES)
	End Function
	
	Function DisplayWarn(sError As String, nPrompt As Integer, sTitle As String) As Integer
		DisplayWarn = Messagebox (sError, nPrompt+MB_ICONEXCLAMATION, sTitle)
	End Function
	
End Class







</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim TemplateImport As cBaseServerImportHolidays
	Set TemplateImport = New cBaseServerImportHolidays
	Call TemplateImport.CopyToDB
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime dst='true'>20020725T153558,67-04</datetime></agentmodified></rundata>
<item name='$POID'><datetime dst='true'>20130909T095404,86-04</datetime></item></agent>

