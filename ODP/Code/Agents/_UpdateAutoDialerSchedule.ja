<?xml version='1.0' encoding='utf-8'?>
<agent name='_UpdateAutoDialerSchedule' xmlns='http://www.lotus.com/dxl' version='9.0'
 maintenanceversion='1.5' replicaid='C1257E4300352F3F' hide='v3' publicaccess='false'
 designerversion='8' language='en' restrictions='unrestricted'>
<noteinfo noteid='272' unid='B669ED86A4317F66052569B5006B4907' sequence='5010'>
<created><datetime>20001214T143150,47-05</datetime></created>
<modified><datetime dst='true'>20150512T114056,54+02</datetime></modified>
<revised><datetime dst='true'>20130909T095403,84-04</datetime></revised>
<lastaccessed><datetime dst='true'>20150512T114056,54+02</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20150512T114056,54+02</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></updatedby>
<revisions><datetime>20011005T162643,26-05</datetime></revisions>
<wassignedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></wassignedby>
<designchange><datetime dst='true'>20130909T095355,08-04</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='modified'/><code event='action'><javaproject class='JavaAgent.class'
 codepath='d:\lotus\notes\data'><java name='DTParser.java'>import java.util.Vector;
import java.util.Enumeration;

public class DTParser {

	private int posHyphen;
	private int posSemicolon;
	
	DTParser(int iHyphen, int iSemicolon)
	{
		setPosHyphen(iHyphen);
		setPosSemicolon(iSemicolon);
	}
	
	private void setPosHyphen(int iHyphen)
	{
		posHyphen = iHyphen;
	}
	
	private void setPosSemicolon(int iSemicolon)
	{
		posSemicolon = iSemicolon;
	}

	public void resetPos(int iHyphen, int iSemicolon)
	{
		setPosHyphen(iHyphen);
		setPosSemicolon(iSemicolon);
	}
	
	public boolean isDateTimeRange(String sDateTime)
	{
		posHyphen = sDateTime.indexOf("-", posHyphen);
		posSemicolon = sDateTime.indexOf(";", posSemicolon);
		
		// Encountered an individual DateTime entry
		if ((posSemicolon &lt; posHyphen) &amp;&amp; !(posSemicolon == -1))
		{
			posHyphen = 0;
			posSemicolon++;
			return false;
		}
		
		// Encountered a DateTime range
		if ((posHyphen &lt; posSemicolon) &amp;&amp; !(posHyphen == -1))
		{
			posHyphen++;
			posSemicolon++;
			return true;
		}
		
		// Encountered a DateTime range - last in the list
		if (!(posHyphen == -1) &amp;&amp; (posSemicolon == -1))
		{
			return true;
		}
		
		// Encountered an individual DateTime entry - either no DateTime ranges follow this entry or this entry is the last in the list of DateTimes
		if (posHyphen == -1)
		{
			return false;
		}
		return false;
	}
}

</java><java name='JavaAgent.java'>import lotus.domino.*;
import java.util.Vector;
import java.util.Enumeration;

public class JavaAgent extends AgentBase {

	public void NotesMain() {

		try {
			Session session = getSession();
			AgentContext agentContext = session.getAgentContext();

			Database currentDb = agentContext.getCurrentDatabase();
			DateTime curDate = session.createDateTime("01/01/1990");
			DocumentCollection dcCurrentDoc = agentContext.unprocessedSearch("@Contains(UseAutoDlr; \"1\")", curDate, 0);
			Document currentDoc = dcCurrentDoc.getFirstDocument();
			while (currentDoc != null)
			{
				Vector vItemValue = currentDoc.getItemValue("UseAutoDlr");
				if (vItemValue.toString().equals("[1]"))
				{
					Vector vSchedule = new Vector();
					Vector vNewSchedule = new Vector();
					Vector vDays = new Vector();
					Vector vInterval = new Vector();
					DTParser dtpSchedule = new DTParser(0,0);
					int iVectorCount = 0;
					vItemValue = currentDoc.getItemValue("AutoDlrConnName");
					String sAutoDialerConnName = vItemValue.toString();
					sAutoDialerConnName = sAutoDialerConnName.substring(1, sAutoDialerConnName.length()-1);
					if (!sAutoDialerConnName.equals(""))
					{
						Enumeration enumItems;
						DateTime dtScheduleItem;
						Item iSchedule;
						String sSchedule;
						Integer iZero = new Integer(0);
							
						vSchedule = currentDoc.getItemValue("Schedule");
						vInterval.addElement(iZero);
						vDays = currentDoc.getItemValue("WeekDays");
						iSchedule = currentDoc.getFirstItem("Schedule");
						sSchedule = iSchedule.getText();
						
						DocumentCollection dcSearchResults = currentDb.search("@Contains(AutoDlrConnName; \""+sAutoDialerConnName+"\")");
						Document foundDoc = dcSearchResults.getFirstDocument();
						while (foundDoc != null)
						{
							if (foundDoc.getItemValue("AutoDlrTsk").toString().equals("[1]"))
							{	
								int decrementTime = (((Double)((foundDoc.getItemValue("AutoDlrConnName_1")).firstElement())).intValue() *-1);
								dtpSchedule.resetPos(0,0);
								
								for (enumItems = vSchedule.elements(); enumItems.hasMoreElements();)
								{
									dtScheduleItem = (DateTime)enumItems.nextElement();
									dtScheduleItem.adjustMinute(decrementTime);
									if (dtpSchedule.isDateTimeRange(sSchedule) &amp;&amp; enumItems.hasMoreElements())
									{
										dtScheduleItem = (DateTime)enumItems.nextElement();
									}
									else
									{
										vNewSchedule.addElement(dtScheduleItem);
									}
								}
								// String sTemp = dtpSchedule.assembleDTString(vNewSchedule);
								foundDoc.replaceItemValue("Schedule", vNewSchedule);
								foundDoc.replaceItemValue("Interval", vInterval);
								foundDoc.replaceItemValue("WeekDays", vDays);
								foundDoc.save();
							}							
							foundDoc = dcSearchResults.getNextDocument();
						}
					}
				}
				currentDoc = dcCurrentDoc.getNextDocument();
			}

		} catch(Exception e) {
			System.out.println("Exception: "+e+"  "+e.getMessage());
			e.printStackTrace();
		}
	}
}
</java></javaproject></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime>20070315T125639,49-05</datetime></agentmodified></rundata>
<item name='$POID'><datetime dst='true'>20130909T095403,84-04</datetime></item></agent>

