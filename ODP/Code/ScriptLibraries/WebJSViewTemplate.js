/*	js used in $$ViewTemplateDefault*/var hGETRequest = nullfunction getSelectedDocs(){	/*	This function returns selected document UNIDs from an HTML-style web view	*/	var iX	= 0	var aUNID = []	var hForm = window.document.forms[0]		if (hForm != null) {		for (var iY = 0; iY < hForm.elements.length; iY++) { 			if (hForm.elements[iY].type == "checkbox" && hForm.elements[iY].name == "$$SelectDoc" && hForm.elements[iY].checked) {				aUNID[iX] = hForm.elements[iY].value				iX++ 			} 		} 	} 	return aUNID}function onClickStartWith() {	var sKey = document.forms[0].elements['inpSearch'].value		if (sKey == '') return	var iPos = location.href.indexOf('&StartKey=')	if (iPos > -1) {		var sUrl = location.href.substring(0, iPos)	} else {		var sUrl = location.href	}		location.href = sUrl + '&StartKey=' + escape(sKey)}function onClickSearch() {	var sSearch = document.forms[0].elements['inpSearch'].value		if (sSearch == '') return	location.href = sWebDbName + sViewName + '/?SearchView&Query=' + strEscapeFT(sSearch) +					'&SearchWV=true&SearchFuzzy=true&Start=1&Count=100'}/*   ---------------------------------------------------------------------------	cGETRequest is used in the action buttons to do a	GET request 	and retrieve/modify data from/in the backend   ---------------------------------------------------------------------------*/function onLoadBody() {	// called in the onload event	window.hGETRequest = new cGETRequest()}function cGETRequest() {	this.sUID				= 'sObjUID' + (window.iObj++)	this.sObject 			= 'window.aObj.' + this.sUID	window.aObj[this.sUID]	= this	// setup transfer object	this.hTransfer = new cTransfer(window, 'get')	this.hTransfer.transEventOnLoad	= this.sObject + '.onDataLoaded'	this.hTransfer.transEventOnError	= this.sObject + '.onErrorLoadingData'}cGETRequest.prototype.onDataLoaded = function(hWinData) {	// attach loaded data to this object	this.getData = hWinData.getData	this.getData()	_doClick('$Refresh', this, null)}cGETRequest.prototype.onErrorLoadingData = function(sError) {	alert(sError)		_doClick('$Refresh', this, null)}