/*	library:		WebJSClassTransfer		description:	base class for transfering data*/cTransfer = function (hWin, sMode) {	// hWin is the window where the transfer layer is created	// !!!! this MUST NOT be a frameset !!!!	this.sUID				= 'sObjUID' + (window.iObj++)	this.sObject 			= 'window.aObj.' + this.sUID	window.aObj[this.sUID]	= this	this.hWinTransfer		= hWin	this.sMode			= sMode	this.hTransferObject	= null	this.isSrc			= true		this.transEventOnLoad	= null	this.transEventOnError	= null	if (this.sMode == 'get') {		// get/create layer for transfering data from the server		if (hWin.frames.frTransfer) {					this.hTransferObject	= hWin.frames.frTransfer			this.isSrc			= false					} else if (isDOM) {			// this method works only in IE 5.5 or higher and Mozilla			//alert('iframe "frTransfer" was not found')			var hIframe = this.hWinTransfer.document.createElement('IFRAME')			hIframe.style.visibility = 'hidden'				this.hTransferObject = this.hWinTransfer.document.body.appendChild(hIframe)			} else if (isNN4) {				this.hTransferObject = new Layer(0, this.hWinTransfer)		}	}}cTransfer.prototype.transGetData = function(sURL) {		// PUBLIC	if (this.isSrc) {			this.hTransferObject.src = sURL + '&JsRef=' + this.sObject	} else {		this.hTransferObject.location.replace(sURL + '&JsRef=' + this.sObject)	}	// now wait until the data gets loaded, the jdataOnDataLoaded function is called 	// from the onLoad event handler in the loaded document}cTransfer.prototype.transOnLoad = function(hWinData) {	// PRIVATE		// called from the onload event	if (this.transEventOnLoad == null) {		alert('internal error - transEventOnLoad is not defined')		return;	}	// call onload event	this.hWinData = hWinData			var sWin = isDOM ? 				'(' + this.sObject + '.hWinData)' : 				'(' + this.sObject + '.hTransferObject)'	setTimeout(this.transEventOnLoad + sWin, 0)}cTransfer.prototype.transOnError = function(sError) {	// PRIVATE		// called from the onload event in an error case		if (this.transEventOnError) {		eval(this.transEventOnError + "('" + sError + "')")					} else {		alert(sError)	}}