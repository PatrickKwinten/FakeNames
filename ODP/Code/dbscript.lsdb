<?xml version='1.0' encoding='utf-8'?>
<databasescript xmlns='http://www.lotus.com/dxl' version='9.0' maintenanceversion='1.5'
 replicaid='C1257E4300352F3F' language='en'>
<noteinfo noteid='16e' unid='9BD12F1565176007852565D30080821A' sequence='5031'>
<created><datetime>19980326T182339,14-05</datetime></created>
<modified><datetime dst='true'>20150512T114055,54+02</datetime></modified>
<revised><datetime dst='true'>20130909T095404,40-04</datetime></revised>
<lastaccessed><datetime dst='true'>20150512T114055,54+02</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20150512T114055,54+02</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></updatedby>
<revisions><datetime dst='true'>20100520T114416,89-04</datetime><datetime
 dst='true'>20100520T160043,28-04</datetime></revisions>
<wassignedby><name>CN=Lotus Notes Template Development/O=Lotus Notes</name></wassignedby><code
 event='options'><lotusscript>Use "PolicyManagement"


</lotusscript></code><code event='declarations'><lotusscript>'Domino_Directory: '

'//String resource here and in Rules Lib to support R4 backward compatibility
Const SPEC_STR7 = "You are about to delete a Configuration Document and its children documents. Do you want to continue?"
Const SPEC_STR8 = "Continue"
Const SPEC_STR9 = "You must select one document."
Const SPEC_STR10 = "Error!"
Const SPEC_STR11 = "The Configuration document must be in edit mode to delete rules."
Const SPEC_STR12 = "Delete Rule."
Const SPEC_STR27 = "Rules can only be created, deleted or changed from the Configuration Document!"
Const SPEC_STR30 = "Permanently remove the selected rule from this configuration document?"	

Dim ws As NotesUIWorkspace
Dim session As NotesSession
Dim db As NotesDatabase
Dim profile As NotesDocument

Dim certIds() As String


</lotusscript></code><code event='postopen'><lotusscript>Sub Postopen(Source As Notesuidatabase)
	Set session = New NotesSession
	Set db = session.CurrentDatabase   
	Set ws = New NotesUIWorkspace
	If Lcase(Right(db.Filename, 3)) = "ntf" Then
		Exit Sub
	End If
	level=db.CurrentAccessLevel
	Set profile=db.GetProfileDocument("DirectoryProfile") 
	If Len(profile.GetItemValue("Domain")(0))=0  And level = ACLLEVEL_MANAGER Then
		Call CreateDefaultPublicDirectoryProfile
	End If
	
End Sub
</lotusscript></code><code event='CreateDefaultPublicDirectoryProfile'><lotusscript
>Sub CreateDefaultPublicDirectoryProfile
	
'the global variable "profile" is a profile document already
'we need to add the fields to it
	Call profile.ReplaceItemValue("Form", "DirectoryProfile")
	Call profile.ComputeWithForm(False, False)
	
	Call profile.Save(True,True,True)
	Call ws.EditProfile("DirectoryProfile")  
	
End Sub
</lotusscript></code><code event='querydocumentdelete'><lotusscript>Sub Querydocumentdelete(Source As Notesuidatabase, Continue As Variant)
	Dim view As NotesUIView
	Dim RulesView As NotesView
	Dim strViewName As String
	Dim db As NotesDatabase
	Dim RulesCollection As NotesDocumentCollection
	Dim Collection As NotesDocumentCollection
	Dim UIDoc As NotesUIDocument
	Dim note As NotesDocument
	Dim tempNote As Notesdocument
	Dim answer As Integer	
	Dim DocId As Variant
	Dim doc As NotesDocument
	
	If session Is Nothing Then		
		Set session = New NotesSession
	End If
	
	If ws Is Nothing Then	
		Set ws = New notesuiworkspace
	End If
	
	continue = True
	
	Set db = session.currentdatabase
	Set UIDoc = ws.CurrentDocument
	
	'// If we're not deleting a Server Config doc, exit sub
	If uidoc Is Nothing Then
		Exit Sub
	Else
		Set doc = uidoc.document
		If Not doc Is Nothing Then
			If doc.HasItem("Type") Then
				If uidoc.FieldGetText("Type") &lt;&gt; "ServerConfig" Then
					Exit Sub
				End If
			End If
		End If
	End If
	
	Set View = ws.CurrentView
	
	Set collection = source.Documents
	
	strviewName = View.Viewalias
	
	'//We are are only handling deletions for views with Aliases.
	
	'//This is the case of Rules
	If Len(strViewName) = 0 Then Goto AllowDelete
	
	'//Deleting Configuration doc - Check for any related Rules
	If Strcompare(strViewName, "Configurations")  = 0 Then 
		If (collection.Count = 0) Then
			Msgbox SPEC_STR9, 16,SPEC_STR10
			continue = False
			Exit Sub          
		End If
		Set RulesView = db.GetView("Rules") 					'//Delete children documents
		Call RulesView.refresh
		
		Set note = collection.GetFirstDocument
		While Not(note Is Nothing)
			DocId = note.GetItemValue("CfgDocUNID")
			Set RulesCollection = Rulesview.GetAllDocumentsByKey(DocId, True)
			If (RulesCollection.count &gt;= 0) Then 				'//Deletion Warning
				answer = Msgbox (SPEC_STR7, 4 + 32,SPEC_STR8)
				If answer = 7 Then		
					continue = False
					Exit Sub        
				End If
				Call RulesCollection.RemoveAll(True)			
			End If			
			'//Remove the doc in focus now
			Set tempNote = note 
			Set note = collection.getnextdocument(note)			
			Call TempNote.Remove(True) 	'					//Delete focus doc now
		Wend
		Call RulesView.refresh
	Elseif Strcompare(strViewName, "Rules")  = 0 Then
		'//Check if the user is trying to delete a Rule directly from the 
		'//(Server Mail Rules) hidden view
		If Not (UIDoc Is Nothing) Then
			'//This is a Rule doc being deleted from within the Config Doc??
			If UIDoc.document.GetItemValue("Form")(0) = "ServerConfig" Then
				'//Make sure Config Doc is in Edit mode
				If (UIDoc.EditMode) Then
					answer = Msgbox (SPEC_STR30, 4 + 32,SPEC_STR12)
					If answer = 7 Then		
						continue = False
						Exit Sub        
					End If
					Set collection = source.Documents
					Set note = collection.GetFirstDocument	
				'//User can only select one doc at time 					
					While Not(note Is Nothing)
						If note.GetItemValue("Form")(0) = "Mailrule" Then	
						'//Remove the doc in focus now
							Set tempNote = note 
							Set note = collection.getnextdocument(note)			
							Call TempNote.Remove(True) 	'					//Delete focus doc now
						End If		
					Wend				
					Call GatherAllRules(uidoc.FieldGetText("CfgDocUNID"), uidoc.Document)	
					ws.ViewRefresh
				Else
					Msgbox SPEC_STR11, 0 + 16,SPEC_STR12
					continue = False
				End If
			End If	
		Else	
			Messagebox SPEC_STR27, 48, SPEC_STR10
			continue = False
			Exit Sub
		End If
	End If
AllowDelete:
	
End Sub
</lotusscript></code><code event='GatherAllRules'><lotusscript>Sub GatherAllRules(CfgDocUnid As String, Doc As NotesDocument)
	Dim session As New NotesSession
	Dim db As NotesDatabase
	Dim view As NotesView
	Dim collection As NotesDocumentCollection
	Dim note As NotesDocument
	Dim item As NotesItem
	Dim strfilteritem As String
	Dim nrulenum As Integer
	Dim nfiltercount As Integer
	Dim I As Integer
	Stop
	Set db = session.CurrentDatabase
	Set view = db.GetView("Rules")
	Call view.refresh
	Set collection = view.GetAllDocumentsByKey(CfgDocUnid, True)
	' Remove all $Filter items
	Forall items In doc.items
		If items.type = 1536 Then
			If Lcase(Left(items.name,7)) = "$filter" Then
				Call items.remove()
			End If
		End If
	End Forall
	
	If collection.count &gt; 0 Then
		Set note = collection.GetFirstDocument
		For i = 1 To collection.count
			If Not doc Is Nothing Then
				If nfiltercount &lt; Cstr(note.getitemvalue("ordernum")(0)) Then
					nfiltercount = Cstr(note.getitemvalue("ordernum")(0))
				End If
				nrulenum = note.getitemvalue("ordernum")(0)				
				strfilteritem = "$FilterFormula_"+Cstr(nrulenum)
				If note.getitemvalue("Enable")(0)="1" Then
					Set item = note.GetFirstItem("$FilterFormula")
					If doc.hasitem(strfilteritem) Then doc.removeitem(strfilteritem)
					If Not(item Is Nothing) Then Call item.copyitemtodocument(doc,strfilteritem)
				End If
			End If
			Set note = collection.GetNextDocument(note)	
		Next
		'Enable rules checking in NSF
		Call db.enabledboptions(1,True)
		Call doc.replaceitemvalue("$FilterFormulaCount", Cstr(nfiltercount+1))
		If Not (doc.hasitem("$FiltersSeqNo")) Then 
			Call doc.replaceitemvalue("$FiltersSeqNo", "1")
		Else
			Call doc.replaceitemvalue("$FiltersSeqNo", Cstr( Cint( doc.getitemvalue( "$FiltersSeqNo" )(0) )+1 ))
			' need to test for maxint
		End If
		' The server config doc is saved in the query save
		Call doc.Save(True,False)
	End If
End Sub
</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Redim certIds(0) As String
End Sub
</lotusscript></code><code event='postdocumentdelete'><lotusscript>Sub Postdocumentdelete(Source As Notesuidatabase)
	
	Dim deletedNotes As NotesDocumentCollection,currentDeletedNote As notesdocument
	Dim profileCollection As NotesDocumentCollection,currentProfileNote As NotesDocument
	
	Set deletedNotes = source.Documents
	Set currentDeletedNote = deletedNotes.GetFirstDocument()
	If currentDeletedNote.GetItemValue("Type")(0) =  "CrossCertificate" Or currentDeletedNote.GetItemValue("Type")(0) ="Certifier" Or currentDeletedNote.GetItemValue("Type")(0) ="VaultTrustCertificate" Or currentDeletedNote.GetItemValue("Type")(0) ="PasswordResetCertificate" Or currentDeletedNote.GetItemValue("Type")(0) ="Account" Then
		While Not (currentDeletedNote Is Nothing)
			Call addStringtoArray(certIds(),currentDeletedNote.UniversalID)
			Set currentDeletedNote = deletedNotes.GetnextDocument(currentDeletedNote)
		Wend
		Call ProcessCertNote(certIds,DELETED_CERTIFICATE)
		Call ProcessAcctNote(certIds,DELETED_ACCOUNT)
	End If
End Sub</lotusscript></code>
<item name='$POID'><datetime dst='true'>20130909T095404,40-04</datetime></item></databasescript>

